暂存区->工作区
git rm  --cache  删除缓冲区
git log  查看提交日志
git log -最近提交的次数
git log --pretty =oneline

命令光标切换快捷键
ctrl+A 光标跳到前面
ctrl+E 光标跳到后面
ctrl+C 跳到下一行（放弃当前行执行）

$echo '内容'>hello.txt    把内容写入到hello.txt  文件中，覆盖掉原来的内容


设置邮箱和用户名
git config --global (基本不用，给整个计算机一次性设置)
git config --system (给当前用户一次性设置)  ~.gitconfig
git config --local (给当前项目一次性设置)   .git/config

优先级: local>system>global
$pwd  查看当前目录结构

$cat gitconfig 查看当前计算机用户的用户名和邮箱,该信息存放位置C:\Users\Administrator\.gitconfig.cofig 中

删除 git config --local --unset  user.name
操作：
       如果某个文件已提交，并且对其进行了修改。可以放弃修改（还原到已提交状态）
git checkout --  hello.txt

git add hello.txt 从工作区到暂存区 
git commit -m '提示日志'  从暂存区到仓库
git reset head 从暂存区到工作区

提交问题：
               只对修改之后的提交有效。修改之前的提交仍然使用之前的配置（用户名、邮箱）
删除已提交的文件
git rm x  1:删除  2.放暂存区git st
删除之后文件被放到暂存区中
彻底删除：git commit -m '彻底删除'
操作系统  rm 文件  1. 删除 2.工作区

git rm 后悔
1.恢复到工作区 git reset head hello.txt
2.                      git checkout --hello.txt
